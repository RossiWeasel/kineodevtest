Given the following tables:

create schema e3test;

use e3test;

CREATE TABLE Company (
   id INT AUTO_INCREMENT NOT NULL,
   name VARCHAR(100),
  PRIMARY KEY (id)
) ENGINE = InnoDB ROW_FORMAT = DEFAULT;

CREATE TABLE employee (
   id INT AUTO_INCREMENT NOT NULL,
   first_name VARCHAR(100),
   last_name VARCHAR(100),
  PRIMARY KEY (id)
) ENGINE = InnoDB ROW_FORMAT = DEFAULT;

- Company:
Id
Name

- Employee:
Id
First Name
Last Name


- Database tables are provided.
- Initial JPA entities are provided.

Requirements 1 and 2 are mandatory, work on the other requirements in any order:

1. A company may have many employees and one employee can only work for one company. Please add this relationship to the database tables.
2. Add the previous relationship to the JPA entities.
3. Create the REST end-point to create Employees in the system.
4. Create REST end-point to Delete an employee.
5. Create a "Search" REST end-point to search employees by any of the "Employee" table fields (Id, First Name or Last Name). The result should be ordered by First Name alphabetically.
6. Create REST end-point to Delete a Company. Companies can only be deleted if it doesn't have employees.

- 
- Command to run the project: mvn spring-boot:run
- Web Context is e3Test


You will receive extra points for Junit tests and Validations

Eveything will be evaluated, not only the result.
